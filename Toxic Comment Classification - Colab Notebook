{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"Copy of [10] Toxic Comment Classification Challenge: Starter Colab Notebook","version":"0.3.2","provenance":[{"file_id":"1BWhZ3P1L-JpgY90PUNlf-mDroS883iMx","timestamp":1545280419451},{"file_id":"1WL-c83g15EuSjbwSjWD1Xx9goX9uHkGA","timestamp":1542854347242}],"collapsed_sections":[]},"kernelspec":{"name":"python3","display_name":"Python 3"}},"cells":[{"metadata":{"id":"SXgAs6uoQ_Zv","colab_type":"text"},"cell_type":"markdown","source":["# Toxic Comment Classification Challenge: Starter Colab Notebook\n","\n","leduykhanh@\n","\n","Short Link: **tiny.cc/mlcc-toxic-starter-colab**\n","\n","Kaggle challenge: https://www.kaggle.com/c/jigsaw-toxic-comment-classification-challenge\n"]},{"metadata":{"id":"qk9gV1cTdOST","colab_type":"toc"},"cell_type":"markdown","source":[">[Toxic Comment Classification Challenge: Starter Colab Notebook](#scrollTo=SXgAs6uoQ_Zv)\n","\n",">>[Import the dataset](#scrollTo=pdQHcSnWdM4b)\n","\n",">>[Input and Label](#scrollTo=rkGUNgjocwKi)\n","\n",">>[Train/Validation Split](#scrollTo=qaUp1VaFek9e)\n","\n",">>[Train a model](#scrollTo=7C1075_ce57W)\n","\n",">>[References](#scrollTo=7C1075_ce57W)\n","\n"]},{"metadata":{"id":"pdQHcSnWdM4b","colab_type":"text"},"cell_type":"markdown","source":["## Import the dataset"]},{"metadata":{"id":"7SQ1l8HxbVz_","colab_type":"code","outputId":"dea4ffd7-33ae-4135-db02-45dc7a559e80","executionInfo":{"status":"ok","timestamp":1542869665239,"user_tz":-480,"elapsed":5140,"user":{"displayName":"Albert Padin","photoUrl":"https://lh5.googleusercontent.com/-tmpLMtYWiVE/AAAAAAAAAAI/AAAAAAAAMJw/5D7JvbPNprg/s64/photo.jpg","userId":"03575150646004157640"}},"colab":{"base_uri":"https://localhost:8080/","height":377}},"cell_type":"code","source":["# Original data belongs to https://www.kaggle.com/c/jigsaw-toxic-comment-classification-challenge/data\n","! wget https://www.dropbox.com/s/ggl9krhh6dcwhhz/train.csv"],"execution_count":0,"outputs":[{"output_type":"stream","text":["--2018-11-22 06:54:21--  https://www.dropbox.com/s/ggl9krhh6dcwhhz/train.csv\n","Resolving www.dropbox.com (www.dropbox.com)... 162.125.8.1, 2620:100:601f:1::a27d:901\n","Connecting to www.dropbox.com (www.dropbox.com)|162.125.8.1|:443... connected.\n","HTTP request sent, awaiting response... 301 Moved Permanently\n","Location: /s/raw/ggl9krhh6dcwhhz/train.csv [following]\n","--2018-11-22 06:54:22--  https://www.dropbox.com/s/raw/ggl9krhh6dcwhhz/train.csv\n","Reusing existing connection to www.dropbox.com:443.\n","HTTP request sent, awaiting response... 302 Found\n","Location: https://uc781b0e395bb2cbf34cca1a57b3.dl.dropboxusercontent.com/cd/0/inline/AWFYCMen6Fd_VIasDezqgC-J6DSCLGTcGdnT5d5ghXL83_8AytKAFH8B-vyHPmjOU4doj3WeVVMAVU0SSiPgydvV7fl0SZbLSH8Ft2SZAyBnRnnll4Msx8VkKYX-jBfGZPCZIRavYTbl2Sg-6lntBP9MyNpIG7S-3zLQvyiNcqiVk0SRtXGDie3kg4sr7XWZz7ydXy7Fomk2ZGRI8vmzGn_A/file [following]\n","--2018-11-22 06:54:22--  https://uc781b0e395bb2cbf34cca1a57b3.dl.dropboxusercontent.com/cd/0/inline/AWFYCMen6Fd_VIasDezqgC-J6DSCLGTcGdnT5d5ghXL83_8AytKAFH8B-vyHPmjOU4doj3WeVVMAVU0SSiPgydvV7fl0SZbLSH8Ft2SZAyBnRnnll4Msx8VkKYX-jBfGZPCZIRavYTbl2Sg-6lntBP9MyNpIG7S-3zLQvyiNcqiVk0SRtXGDie3kg4sr7XWZz7ydXy7Fomk2ZGRI8vmzGn_A/file\n","Resolving uc781b0e395bb2cbf34cca1a57b3.dl.dropboxusercontent.com (uc781b0e395bb2cbf34cca1a57b3.dl.dropboxusercontent.com)... 162.125.9.6, 2620:100:601f:6::a27d:906\n","Connecting to uc781b0e395bb2cbf34cca1a57b3.dl.dropboxusercontent.com (uc781b0e395bb2cbf34cca1a57b3.dl.dropboxusercontent.com)|162.125.9.6|:443... connected.\n","HTTP request sent, awaiting response... 200 OK\n","Length: 68802655 (66M) [text/plain]\n","Saving to: ‘train.csv.4’\n","\n","train.csv.4         100%[===================>]  65.62M  46.0MB/s    in 1.4s    \n","\n","2018-11-22 06:54:24 (46.0 MB/s) - ‘train.csv.4’ saved [68802655/68802655]\n","\n"],"name":"stdout"}]},{"metadata":{"id":"XRAzC7craoBQ","colab_type":"code","outputId":"e8846fb4-6751-428d-afe4-b20b7a0d4fe6","executionInfo":{"status":"ok","timestamp":1542869669059,"user_tz":-480,"elapsed":8943,"user":{"displayName":"Albert Padin","photoUrl":"https://lh5.googleusercontent.com/-tmpLMtYWiVE/AAAAAAAAAAI/AAAAAAAAMJw/5D7JvbPNprg/s64/photo.jpg","userId":"03575150646004157640"}},"colab":{"base_uri":"https://localhost:8080/","height":377}},"cell_type":"code","source":["# Original data belongs to https://www.kaggle.com/c/jigsaw-toxic-comment-classification-challenge/data\n","! wget https://www.dropbox.com/s/ggl9krhh6dcwhhz/test.csv"],"execution_count":0,"outputs":[{"output_type":"stream","text":["--2018-11-22 06:54:25--  https://www.dropbox.com/s/ggl9krhh6dcwhhz/test.csv\n","Resolving www.dropbox.com (www.dropbox.com)... 162.125.8.1, 2620:100:601f:1::a27d:901\n","Connecting to www.dropbox.com (www.dropbox.com)|162.125.8.1|:443... connected.\n","HTTP request sent, awaiting response... 301 Moved Permanently\n","Location: /s/raw/ggl9krhh6dcwhhz/test.csv [following]\n","--2018-11-22 06:54:26--  https://www.dropbox.com/s/raw/ggl9krhh6dcwhhz/test.csv\n","Reusing existing connection to www.dropbox.com:443.\n","HTTP request sent, awaiting response... 302 Found\n","Location: https://uc781b0e395bb2cbf34cca1a57b3.dl.dropboxusercontent.com/cd/0/inline/AWFYCMen6Fd_VIasDezqgC-J6DSCLGTcGdnT5d5ghXL83_8AytKAFH8B-vyHPmjOU4doj3WeVVMAVU0SSiPgydvV7fl0SZbLSH8Ft2SZAyBnRnnll4Msx8VkKYX-jBfGZPCZIRavYTbl2Sg-6lntBP9MyNpIG7S-3zLQvyiNcqiVk0SRtXGDie3kg4sr7XWZz7ydXy7Fomk2ZGRI8vmzGn_A/file [following]\n","--2018-11-22 06:54:26--  https://uc781b0e395bb2cbf34cca1a57b3.dl.dropboxusercontent.com/cd/0/inline/AWFYCMen6Fd_VIasDezqgC-J6DSCLGTcGdnT5d5ghXL83_8AytKAFH8B-vyHPmjOU4doj3WeVVMAVU0SSiPgydvV7fl0SZbLSH8Ft2SZAyBnRnnll4Msx8VkKYX-jBfGZPCZIRavYTbl2Sg-6lntBP9MyNpIG7S-3zLQvyiNcqiVk0SRtXGDie3kg4sr7XWZz7ydXy7Fomk2ZGRI8vmzGn_A/file\n","Resolving uc781b0e395bb2cbf34cca1a57b3.dl.dropboxusercontent.com (uc781b0e395bb2cbf34cca1a57b3.dl.dropboxusercontent.com)... 162.125.9.6, 2620:100:601f:6::a27d:906\n","Connecting to uc781b0e395bb2cbf34cca1a57b3.dl.dropboxusercontent.com (uc781b0e395bb2cbf34cca1a57b3.dl.dropboxusercontent.com)|162.125.9.6|:443... connected.\n","HTTP request sent, awaiting response... 200 OK\n","Length: 68802655 (66M) [text/plain]\n","Saving to: ‘test.csv.4’\n","\n","test.csv.4          100%[===================>]  65.62M  50.0MB/s    in 1.3s    \n","\n","2018-11-22 06:54:28 (50.0 MB/s) - ‘test.csv.4’ saved [68802655/68802655]\n","\n"],"name":"stdout"}]},{"metadata":{"id":"vqwWWvBDbZXd","colab_type":"code","outputId":"78048d2e-e116-45bd-e52f-0ee7151cc73f","executionInfo":{"status":"ok","timestamp":1542869670853,"user_tz":-480,"elapsed":10727,"user":{"displayName":"Albert Padin","photoUrl":"https://lh5.googleusercontent.com/-tmpLMtYWiVE/AAAAAAAAAAI/AAAAAAAAMJw/5D7JvbPNprg/s64/photo.jpg","userId":"03575150646004157640"}},"colab":{"base_uri":"https://localhost:8080/","height":34}},"cell_type":"code","source":["! ls -ls train.csv"],"execution_count":0,"outputs":[{"output_type":"stream","text":["67196 -rw-r--r-- 1 root root 68802655 Nov 22 06:12 train.csv\n"],"name":"stdout"}]},{"metadata":{"id":"N0LKJvVxaVFN","colab_type":"code","colab":{}},"cell_type":"code","source":["import pandas as pd\n","data = pd.read_csv(\"train.csv\")\n","  "],"execution_count":0,"outputs":[]},{"metadata":{"id":"rkGUNgjocwKi","colab_type":"text"},"cell_type":"markdown","source":["## Input and Label\n","\n","Input: \"comment_text\"\n","\n","Label: \"toxic\""]},{"metadata":{"id":"3DnLDkCvc6dD","colab_type":"code","colab":{}},"cell_type":"code","source":["dataset = data[ [\"comment_text\", \"toxic\"] ]"],"execution_count":0,"outputs":[]},{"metadata":{"id":"Um28VMGI8ZTs","colab_type":"code","colab":{}},"cell_type":"code","source":["# clean dataset\n"],"execution_count":0,"outputs":[]},{"metadata":{"id":"qaUp1VaFek9e","colab_type":"text"},"cell_type":"markdown","source":["## Train/Validation Split"]},{"metadata":{"id":"aEwymYMaekAN","colab_type":"code","colab":{}},"cell_type":"code","source":["# Train / validation split\n","dataset = dataset.sample(frac=1)\n","train_dataset = dataset.head(int(0.8 * len(dataset)))\n","validation_dataset = dataset.tail(int(0.2 * len(dataset)))\n","sample_dataset = dataset.sample(frac=0.001)"],"execution_count":0,"outputs":[]},{"metadata":{"id":"o27OBcIQd7Lj","colab_type":"code","outputId":"24f7de4e-07fe-4cea-8e5b-3d83222c0053","executionInfo":{"status":"ok","timestamp":1542869672051,"user_tz":-480,"elapsed":11887,"user":{"displayName":"Albert Padin","photoUrl":"https://lh5.googleusercontent.com/-tmpLMtYWiVE/AAAAAAAAAAI/AAAAAAAAMJw/5D7JvbPNprg/s64/photo.jpg","userId":"03575150646004157640"}},"colab":{"base_uri":"https://localhost:8080/","height":85}},"cell_type":"code","source":["print(len(dataset))\n","print(len(train_dataset))\n","print(len(validation_dataset))\n","print(len(sample_dataset))"],"execution_count":0,"outputs":[{"output_type":"stream","text":["159571\n","127656\n","31914\n","160\n"],"name":"stdout"}]},{"metadata":{"id":"8snQOChO-8XR","colab_type":"code","outputId":"f62e1084-a2cd-49ea-8817-a15aa4c8d664","executionInfo":{"status":"ok","timestamp":1542869672052,"user_tz":-480,"elapsed":11882,"user":{"displayName":"Albert Padin","photoUrl":"https://lh5.googleusercontent.com/-tmpLMtYWiVE/AAAAAAAAAAI/AAAAAAAAMJw/5D7JvbPNprg/s64/photo.jpg","userId":"03575150646004157640"}},"colab":{"base_uri":"https://localhost:8080/","height":204}},"cell_type":"code","source":["sample_dataset.head()"],"execution_count":0,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>comment_text</th>\n","      <th>toxic</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>49329</th>\n","      <td>\"\\n\\n Please do not vandalize pages, as you di...</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>23869</th>\n","      <td>Bugs, why is it that if I make a comment that ...</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>105401</th>\n","      <td>We already won, in 1945. The truth is one, and...</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>100232</th>\n","      <td>You should feel sorry for threatening repercus...</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>60350</th>\n","      <td>Funding of Royal Commission \\n\\nI added a cita...</td>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["                                             comment_text  toxic\n","49329   \"\\n\\n Please do not vandalize pages, as you di...      0\n","23869   Bugs, why is it that if I make a comment that ...      0\n","105401  We already won, in 1945. The truth is one, and...      0\n","100232  You should feel sorry for threatening repercus...      0\n","60350   Funding of Royal Commission \\n\\nI added a cita...      0"]},"metadata":{"tags":[]},"execution_count":8}]},{"metadata":{"id":"FhHwC6DFd5N6","colab_type":"code","outputId":"b7f4adc8-0ddb-4191-857f-3139ffb2cf94","executionInfo":{"status":"ok","timestamp":1542869672715,"user_tz":-480,"elapsed":12540,"user":{"displayName":"Albert Padin","photoUrl":"https://lh5.googleusercontent.com/-tmpLMtYWiVE/AAAAAAAAAAI/AAAAAAAAMJw/5D7JvbPNprg/s64/photo.jpg","userId":"03575150646004157640"}},"colab":{"base_uri":"https://localhost:8080/","height":51}},"cell_type":"code","source":["# function to clean data\n","import string\n","import itertools \n","import re\n","import nltk\n","nltk.download('stopwords')\n","from nltk.stem import WordNetLemmatizer\n","from nltk.corpus import stopwords\n","from string import punctuation\n","\n","stop_words = set(stopwords.words('english'))\n","\n","def cleanData(text, lowercase = False, remove_stops = False, stemming = False, lemmatization = False):\n","    txt = str(text)\n","    \n","    # Replace apostrophes with standard lexicons\n","    txt = txt.replace(\"isn't\", \"is not\")\n","    txt = txt.replace(\"aren't\", \"are not\")\n","    txt = txt.replace(\"ain't\", \"am not\")\n","    txt = txt.replace(\"won't\", \"will not\")\n","    txt = txt.replace(\"didn't\", \"did not\")\n","    txt = txt.replace(\"shan't\", \"shall not\")\n","    txt = txt.replace(\"haven't\", \"have not\")\n","    txt = txt.replace(\"hadn't\", \"had not\")\n","    txt = txt.replace(\"hasn't\", \"has not\")\n","    txt = txt.replace(\"don't\", \"do not\")\n","    txt = txt.replace(\"wasn't\", \"was not\")\n","    txt = txt.replace(\"weren't\", \"were not\")\n","    txt = txt.replace(\"doesn't\", \"does not\")\n","    txt = txt.replace(\"'s\", \" is\")\n","    txt = txt.replace(\"'re\", \" are\")\n","    txt = txt.replace(\"'m\", \" am\")\n","    txt = txt.replace(\"'d\", \" would\")\n","    txt = txt.replace(\"'ll\", \" will\")\n","    txt = txt.replace(\"--th\", \" \")\n","    \n","    # More cleaning\n","    txt = re.sub(r\"alot\", \"a lot\", txt)\n","    txt = re.sub(r\"what's\", \"\", txt)\n","    txt = re.sub(r\"What's\", \"\", txt)\n","    \n","    \n","    # Remove urls and emails\n","    txt = re.sub(r'^https?:\\/\\/.*[\\r\\n]*', ' ', txt, flags=re.MULTILINE)\n","    txt = re.sub(r'[\\w\\.-]+@[\\w\\.-]+', ' ', txt, flags=re.MULTILINE)\n","    \n","    # Replace words like sooooooo with so\n","    txt = ''.join(''.join(s)[:2] for _, s in itertools.groupby(txt))\n","    \n","    # Remove punctuation from text\n","    txt = ''.join([c for c in text if c not in punctuation])\n","    \n","    # Remove all symbols\n","    txt = re.sub(r'[^A-Za-z\\s]',r' ',txt)\n","    txt = re.sub(r'\\n',r' ',txt)\n","    \n","    if lowercase:\n","        txt = \" \".join([w.lower() for w in txt.split()])\n","        \n","    if remove_stops:\n","        txt = \" \".join([w for w in txt.split() if w not in stop_words])\n","        \n","    if stemming:\n","        st = PorterStemmer()\n","        txt = \" \".join([st.stem(w) for w in txt.split()])\n","    \n","    if lemmatization:\n","        wordnet_lemmatizer = WordNetLemmatizer()\n","        txt = \" \".join([wordnet_lemmatizer.lemmatize(w, pos='v') for w in txt.split()])\n","\n","    return txt\n","  "],"execution_count":0,"outputs":[{"output_type":"stream","text":["[nltk_data] Downloading package stopwords to /root/nltk_data...\n","[nltk_data]   Package stopwords is already up-to-date!\n"],"name":"stdout"}]},{"metadata":{"id":"HGoyuOf4bdhe","colab_type":"code","outputId":"0d8cb128-e878-47a0-f34d-3b8a1b4e0063","executionInfo":{"status":"ok","timestamp":1542869672716,"user_tz":-480,"elapsed":12535,"user":{"displayName":"Albert Padin","photoUrl":"https://lh5.googleusercontent.com/-tmpLMtYWiVE/AAAAAAAAAAI/AAAAAAAAMJw/5D7JvbPNprg/s64/photo.jpg","userId":"03575150646004157640"}},"colab":{"base_uri":"https://localhost:8080/","height":297}},"cell_type":"code","source":["train_dataset.describe()"],"execution_count":0,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>toxic</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>count</th>\n","      <td>127656.000000</td>\n","    </tr>\n","    <tr>\n","      <th>mean</th>\n","      <td>0.095428</td>\n","    </tr>\n","    <tr>\n","      <th>std</th>\n","      <td>0.293807</td>\n","    </tr>\n","    <tr>\n","      <th>min</th>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>25%</th>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>50%</th>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>75%</th>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>max</th>\n","      <td>1.000000</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["               toxic\n","count  127656.000000\n","mean        0.095428\n","std         0.293807\n","min         0.000000\n","25%         0.000000\n","50%         0.000000\n","75%         0.000000\n","max         1.000000"]},"metadata":{"tags":[]},"execution_count":10}]},{"metadata":{"id":"To26H3DtHKTk","colab_type":"code","outputId":"97817b6a-c26f-4eac-b18b-7a04c6ee3760","executionInfo":{"status":"ok","timestamp":1542869718948,"user_tz":-480,"elapsed":58759,"user":{"displayName":"Albert Padin","photoUrl":"https://lh5.googleusercontent.com/-tmpLMtYWiVE/AAAAAAAAAAI/AAAAAAAAMJw/5D7JvbPNprg/s64/photo.jpg","userId":"03575150646004157640"}},"colab":{"base_uri":"https://localhost:8080/","height":221}},"cell_type":"code","source":["# clean comments\n","train_dataset['comment_text'] = train_dataset['comment_text'].map(lambda x: cleanData(x, lowercase=False, remove_stops=True, stemming=False, lemmatization = False))\n","validation_dataset['comment_text'] = validation_dataset['comment_text'].map(lambda x: cleanData(x, lowercase=False, remove_stops=True, stemming=False, lemmatization = False))"],"execution_count":0,"outputs":[{"output_type":"stream","text":["/usr/local/lib/python3.6/dist-packages/ipykernel_launcher.py:1: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame.\n","Try using .loc[row_indexer,col_indexer] = value instead\n","\n","See the caveats in the documentation: http://pandas.pydata.org/pandas-docs/stable/indexing.html#indexing-view-versus-copy\n","  \"\"\"Entry point for launching an IPython kernel.\n","/usr/local/lib/python3.6/dist-packages/ipykernel_launcher.py:2: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame.\n","Try using .loc[row_indexer,col_indexer] = value instead\n","\n","See the caveats in the documentation: http://pandas.pydata.org/pandas-docs/stable/indexing.html#indexing-view-versus-copy\n","  \n"],"name":"stderr"}]},{"metadata":{"id":"jWUE2ZWRebgd","colab_type":"code","outputId":"425502a0-90ab-47cd-9048-81bfcf149b97","executionInfo":{"status":"ok","timestamp":1542869718949,"user_tz":-480,"elapsed":58754,"user":{"displayName":"Albert Padin","photoUrl":"https://lh5.googleusercontent.com/-tmpLMtYWiVE/AAAAAAAAAAI/AAAAAAAAMJw/5D7JvbPNprg/s64/photo.jpg","userId":"03575150646004157640"}},"colab":{"base_uri":"https://localhost:8080/","height":297}},"cell_type":"code","source":["validation_dataset.describe()"],"execution_count":0,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>toxic</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>count</th>\n","      <td>31914.000000</td>\n","    </tr>\n","    <tr>\n","      <th>mean</th>\n","      <td>0.097512</td>\n","    </tr>\n","    <tr>\n","      <th>std</th>\n","      <td>0.296658</td>\n","    </tr>\n","    <tr>\n","      <th>min</th>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>25%</th>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>50%</th>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>75%</th>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>max</th>\n","      <td>1.000000</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["              toxic\n","count  31914.000000\n","mean       0.097512\n","std        0.296658\n","min        0.000000\n","25%        0.000000\n","50%        0.000000\n","75%        0.000000\n","max        1.000000"]},"metadata":{"tags":[]},"execution_count":12}]},{"metadata":{"id":"ezvzFtZ2efUk","colab_type":"code","outputId":"6dfc3122-e8de-4b4a-ac23-4be7fc62c6cd","executionInfo":{"status":"ok","timestamp":1542869718949,"user_tz":-480,"elapsed":58748,"user":{"displayName":"Albert Padin","photoUrl":"https://lh5.googleusercontent.com/-tmpLMtYWiVE/AAAAAAAAAAI/AAAAAAAAMJw/5D7JvbPNprg/s64/photo.jpg","userId":"03575150646004157640"}},"colab":{"base_uri":"https://localhost:8080/","height":359}},"cell_type":"code","source":["train_dataset.head(10)"],"execution_count":0,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>comment_text</th>\n","      <th>toxic</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>114194</th>\n","      <td>Thats fine Im arguing removed article theyre u...</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>30850</th>\n","      <td>Response Hey He started</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>75578</th>\n","      <td>butts one mans vandalism another mans lmao</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>155917</th>\n","      <td>Please vandalize pages edit Pipefitter If cont...</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>44267</th>\n","      <td>Hmm vandalist brings I thought tired point But...</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>91876</th>\n","      <td>I went ahead completely omitted last part US U...</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>71211</th>\n","      <td>The Chain Barnstar Recognition The Chain Barns...</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>151884</th>\n","      <td>Your insults I hope apologize insults posted t...</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>141863</th>\n","      <td>Jamie Babbit Hi I saw recent edit Jamie Babbit...</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>34642</th>\n","      <td>Firstly I responsible edits mentioned please v...</td>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["                                             comment_text  toxic\n","114194  Thats fine Im arguing removed article theyre u...      0\n","30850                             Response Hey He started      0\n","75578          butts one mans vandalism another mans lmao      0\n","155917  Please vandalize pages edit Pipefitter If cont...      0\n","44267   Hmm vandalist brings I thought tired point But...      0\n","91876   I went ahead completely omitted last part US U...      0\n","71211   The Chain Barnstar Recognition The Chain Barns...      0\n","151884  Your insults I hope apologize insults posted t...      0\n","141863  Jamie Babbit Hi I saw recent edit Jamie Babbit...      0\n","34642   Firstly I responsible edits mentioned please v...      0"]},"metadata":{"tags":[]},"execution_count":13}]},{"metadata":{"id":"3h8PVnjwdD76","colab_type":"code","outputId":"abd06c2a-a36f-4e67-9633-20ff880bb73a","executionInfo":{"status":"ok","timestamp":1542869718949,"user_tz":-480,"elapsed":58743,"user":{"displayName":"Albert Padin","photoUrl":"https://lh5.googleusercontent.com/-tmpLMtYWiVE/AAAAAAAAAAI/AAAAAAAAMJw/5D7JvbPNprg/s64/photo.jpg","userId":"03575150646004157640"}},"colab":{"base_uri":"https://localhost:8080/","height":359}},"cell_type":"code","source":["validation_dataset.head(10)"],"execution_count":0,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>comment_text</th>\n","      <th>toxic</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>110112</th>\n","      <td>Statement I would like unblocked please action...</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>158353</th>\n","      <td>Can try implement incrementally article instea...</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>141436</th>\n","      <td>March UTC Comment anyone reading The distincti...</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>71258</th>\n","      <td>Listen hey pal want good side dont touch page ...</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>43684</th>\n","      <td>Heh dont matta On another note Take look get c...</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>81993</th>\n","      <td>The comments support came peoples independent ...</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>24233</th>\n","      <td>Talkback War</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>145278</th>\n","      <td>Thank I miss NZ much Will see around</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>81057</th>\n","      <td>Where trying get You replying questions contin...</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>10895</th>\n","      <td>I think section part supporters Rivalries char...</td>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["                                             comment_text  toxic\n","110112  Statement I would like unblocked please action...      0\n","158353  Can try implement incrementally article instea...      0\n","141436  March UTC Comment anyone reading The distincti...      0\n","71258   Listen hey pal want good side dont touch page ...      0\n","43684   Heh dont matta On another note Take look get c...      0\n","81993   The comments support came peoples independent ...      0\n","24233                                        Talkback War      0\n","145278               Thank I miss NZ much Will see around      0\n","81057   Where trying get You replying questions contin...      0\n","10895   I think section part supporters Rivalries char...      0"]},"metadata":{"tags":[]},"execution_count":14}]},{"metadata":{"id":"7C1075_ce57W","colab_type":"text"},"cell_type":"markdown","source":["## Train a model\n","\n","Your model's code start here. All the best :)\n","\n","\n","\n","## References\n","\n","* Text classification using tf.keras https://www.tensorflow.org/tutorials/keras/basic_text_classification\n","\n","* How to build a simple text classifier with TF-Hub https://www.tensorflow.org/tutorials/text_classification_with_tf_hub\n","\n","* Text Classification Tutorial using Tensorflow: https://mohammadkhalifa.github.io/Step-by-Step-Text-Classification-Tutorial-using-Tensorflow/\n","  * Feature-engineering methods for text classification https://towardsdatascience.com/understanding-feature-engineering-part-3-traditional-methods-for-text-data-f6f7d70acd41\n","\n","\n","* Tensorflow Estimator API: https://www.tensorflow.org/tutorials/recurrent\n","\n","* Using pre-trained word embeddings in a Keras model https://blog.keras.io/using-pre-trained-word-embeddings-in-a-keras-model.html\n","\n","* Text Classification with TensorFlow Estimators http://ruder.io/text-classification-tensorflow-estimators/\n","\n","* Scikit-Learns NLP documentation: http://scikit-learn.org/stable/tutorial/text_analytics/working_with_text_data.html\n","\n","* [Review on  Kaggle Toxic Comment Classification Challenge](https://medium.com/the-artificial-impostor/review-kaggle-toxic-comment-classification-challenge-part-1-934447339309)\n"]},{"metadata":{"id":"8odbx3_u9PE_","colab_type":"code","outputId":"3b5da7d7-50c1-47d9-a8b8-44f05b7a5132","executionInfo":{"status":"ok","timestamp":1542869725483,"user_tz":-480,"elapsed":65266,"user":{"displayName":"Albert Padin","photoUrl":"https://lh5.googleusercontent.com/-tmpLMtYWiVE/AAAAAAAAAAI/AAAAAAAAMJw/5D7JvbPNprg/s64/photo.jpg","userId":"03575150646004157640"}},"colab":{"base_uri":"https://localhost:8080/","height":119}},"cell_type":"code","source":["# Install the latest Tensorflow version.\n","!pip install --quiet \"tensorflow>=1.7\"\n","# Install TF-Hub.\n","!pip install tensorflow-hub\n","!pip install seaborn"],"execution_count":0,"outputs":[{"output_type":"stream","text":["Requirement already satisfied: tensorflow-hub in /usr/local/lib/python3.6/dist-packages (0.1.1)\n","Requirement already satisfied: protobuf>=3.4.0 in /usr/local/lib/python3.6/dist-packages (from tensorflow-hub) (3.6.1)\n","Requirement already satisfied: six>=1.10.0 in /usr/local/lib/python3.6/dist-packages (from tensorflow-hub) (1.11.0)\n","Requirement already satisfied: numpy>=1.12.0 in /usr/local/lib/python3.6/dist-packages (from tensorflow-hub) (1.14.6)\n","Requirement already satisfied: setuptools in /usr/local/lib/python3.6/dist-packages (from protobuf>=3.4.0->tensorflow-hub) (40.6.2)\n","Requirement already satisfied: seaborn in /usr/local/lib/python3.6/dist-packages (0.7.1)\n"],"name":"stdout"}]},{"metadata":{"id":"Pj74hIAiCG-h","colab_type":"code","colab":{}},"cell_type":"code","source":["import tensorflow as tf\n","import tensorflow_hub as hub\n","import matplotlib.pyplot as plt\n","import numpy as np\n","import os\n","import pandas as pd\n","import re\n","import seaborn as sns"],"execution_count":0,"outputs":[]},{"metadata":{"id":"d4g9qbaH9R0v","colab_type":"code","colab":{}},"cell_type":"code","source":["# Training input on the whole training set with no limit on training epochs.\n","train_input_fn = tf.estimator.inputs.pandas_input_fn(\n","    train_dataset, train_dataset[\"toxic\"], num_epochs=None, shuffle=True)\n","\n","# Prediction on the whole training set.\n","predict_train_input_fn = tf.estimator.inputs.pandas_input_fn(\n","    train_dataset, train_dataset[\"toxic\"], shuffle=False)\n","# Prediction on the test set.\n","predict_test_input_fn = tf.estimator.inputs.pandas_input_fn(\n","    validation_dataset, validation_dataset[\"toxic\"], shuffle=False)"],"execution_count":0,"outputs":[]},{"metadata":{"id":"nrIm1AeECYgy","colab_type":"code","outputId":"dcfdd9fe-fd63-42ee-8ffe-e30ffd915f1c","executionInfo":{"status":"ok","timestamp":1542869726559,"user_tz":-480,"elapsed":66324,"user":{"displayName":"Albert Padin","photoUrl":"https://lh5.googleusercontent.com/-tmpLMtYWiVE/AAAAAAAAAAI/AAAAAAAAMJw/5D7JvbPNprg/s64/photo.jpg","userId":"03575150646004157640"}},"colab":{"base_uri":"https://localhost:8080/","height":34}},"cell_type":"code","source":["embedded_text_feature_column = hub.text_embedding_column(\n","    key=\"comment_text\", \n","    module_spec=\"https://tfhub.dev/google/nnlm-en-dim128/1\")"],"execution_count":0,"outputs":[{"output_type":"stream","text":["INFO:tensorflow:Using /tmp/tfhub_modules to cache modules.\n"],"name":"stdout"}]},{"metadata":{"id":"yZMSnucECer1","colab_type":"code","outputId":"5724ea02-cb67-49c1-c6cd-749544970692","executionInfo":{"status":"ok","timestamp":1542869726560,"user_tz":-480,"elapsed":66314,"user":{"displayName":"Albert Padin","photoUrl":"https://lh5.googleusercontent.com/-tmpLMtYWiVE/AAAAAAAAAAI/AAAAAAAAMJw/5D7JvbPNprg/s64/photo.jpg","userId":"03575150646004157640"}},"colab":{"base_uri":"https://localhost:8080/","height":190}},"cell_type":"code","source":["estimator = tf.estimator.DNNClassifier(\n","    hidden_units=[700, 512, 256],\n","    feature_columns=[embedded_text_feature_column],\n","    n_classes=2,\n","    optimizer=tf.train.ProximalAdagradOptimizer(learning_rate=0.01, l1_regularization_strength=0.0001))"],"execution_count":0,"outputs":[{"output_type":"stream","text":["INFO:tensorflow:Using default config.\n","WARNING:tensorflow:Using temporary folder as model directory: /tmp/tmpaf604pnh\n","INFO:tensorflow:Using config: {'_model_dir': '/tmp/tmpaf604pnh', '_tf_random_seed': None, '_save_summary_steps': 100, '_save_checkpoints_steps': None, '_save_checkpoints_secs': 600, '_session_config': allow_soft_placement: true\n","graph_options {\n","  rewrite_options {\n","    meta_optimizer_iterations: ONE\n","  }\n","}\n",", '_keep_checkpoint_max': 5, '_keep_checkpoint_every_n_hours': 10000, '_log_step_count_steps': 100, '_train_distribute': None, '_device_fn': None, '_protocol': None, '_eval_distribute': None, '_experimental_distribute': None, '_service': None, '_cluster_spec': <tensorflow.python.training.server_lib.ClusterSpec object at 0x7fbed5b76748>, '_task_type': 'worker', '_task_id': 0, '_global_id_in_cluster': 0, '_master': '', '_evaluation_master': '', '_is_chief': True, '_num_ps_replicas': 0, '_num_worker_replicas': 1}\n"],"name":"stdout"}]},{"metadata":{"id":"c8tJOOxxCkar","colab_type":"code","outputId":"80da8a08-3dc6-484b-c1b2-d0f52882aafa","executionInfo":{"status":"ok","timestamp":1542869926747,"user_tz":-480,"elapsed":266495,"user":{"displayName":"Albert Padin","photoUrl":"https://lh5.googleusercontent.com/-tmpLMtYWiVE/AAAAAAAAAAI/AAAAAAAAMJw/5D7JvbPNprg/s64/photo.jpg","userId":"03575150646004157640"}},"colab":{"base_uri":"https://localhost:8080/","height":3760}},"cell_type":"code","source":["estimator.train(input_fn=train_input_fn, steps=10000);"],"execution_count":0,"outputs":[{"output_type":"stream","text":["WARNING:tensorflow:From /usr/local/lib/python3.6/dist-packages/tensorflow/python/estimator/inputs/queues/feeding_queue_runner.py:62: QueueRunner.__init__ (from tensorflow.python.training.queue_runner_impl) is deprecated and will be removed in a future version.\n","Instructions for updating:\n","To construct input pipelines, use the `tf.data` module.\n","WARNING:tensorflow:From /usr/local/lib/python3.6/dist-packages/tensorflow/python/estimator/inputs/queues/feeding_functions.py:500: add_queue_runner (from tensorflow.python.training.queue_runner_impl) is deprecated and will be removed in a future version.\n","Instructions for updating:\n","To construct input pipelines, use the `tf.data` module.\n","INFO:tensorflow:Calling model_fn.\n","INFO:tensorflow:Saver not created because there are no variables in the graph to restore\n","INFO:tensorflow:Saver not created because there are no variables in the graph to restore\n","INFO:tensorflow:Done calling model_fn.\n","INFO:tensorflow:Create CheckpointSaverHook.\n","INFO:tensorflow:Graph was finalized.\n","INFO:tensorflow:Running local_init_op.\n","INFO:tensorflow:Done running local_init_op.\n","WARNING:tensorflow:From /usr/local/lib/python3.6/dist-packages/tensorflow/python/training/monitored_session.py:804: start_queue_runners (from tensorflow.python.training.queue_runner_impl) is deprecated and will be removed in a future version.\n","Instructions for updating:\n","To construct input pipelines, use the `tf.data` module.\n","INFO:tensorflow:Saving checkpoints for 0 into /tmp/tmpaf604pnh/model.ckpt.\n","INFO:tensorflow:loss = 91.142456, step = 1\n","INFO:tensorflow:global_step/sec: 47.7937\n","INFO:tensorflow:loss = 25.777737, step = 101 (2.094 sec)\n","INFO:tensorflow:global_step/sec: 51.8085\n","INFO:tensorflow:loss = 16.446276, step = 201 (1.934 sec)\n","INFO:tensorflow:global_step/sec: 50.6745\n","INFO:tensorflow:loss = 15.640761, step = 301 (1.973 sec)\n","INFO:tensorflow:global_step/sec: 52.5897\n","INFO:tensorflow:loss = 10.338378, step = 401 (1.899 sec)\n","INFO:tensorflow:global_step/sec: 51.8262\n","INFO:tensorflow:loss = 23.363823, step = 501 (1.929 sec)\n","INFO:tensorflow:global_step/sec: 52.5128\n","INFO:tensorflow:loss = 9.305836, step = 601 (1.904 sec)\n","INFO:tensorflow:global_step/sec: 52.1822\n","INFO:tensorflow:loss = 27.878069, step = 701 (1.916 sec)\n","INFO:tensorflow:global_step/sec: 52.5755\n","INFO:tensorflow:loss = 22.176773, step = 801 (1.902 sec)\n","INFO:tensorflow:global_step/sec: 51.6238\n","INFO:tensorflow:loss = 18.777206, step = 901 (1.937 sec)\n","INFO:tensorflow:global_step/sec: 51.6191\n","INFO:tensorflow:loss = 18.178326, step = 1001 (1.940 sec)\n","INFO:tensorflow:global_step/sec: 51.8849\n","INFO:tensorflow:loss = 11.095734, step = 1101 (1.924 sec)\n","INFO:tensorflow:global_step/sec: 51.8243\n","INFO:tensorflow:loss = 20.744911, step = 1201 (1.930 sec)\n","INFO:tensorflow:global_step/sec: 51.9351\n","INFO:tensorflow:loss = 13.656309, step = 1301 (1.925 sec)\n","INFO:tensorflow:global_step/sec: 52.4713\n","INFO:tensorflow:loss = 16.165627, step = 1401 (1.906 sec)\n","INFO:tensorflow:global_step/sec: 51.3403\n","INFO:tensorflow:loss = 21.512878, step = 1501 (1.952 sec)\n","INFO:tensorflow:global_step/sec: 51.8638\n","INFO:tensorflow:loss = 17.108776, step = 1601 (1.927 sec)\n","INFO:tensorflow:global_step/sec: 51.9523\n","INFO:tensorflow:loss = 15.363976, step = 1701 (1.923 sec)\n","INFO:tensorflow:global_step/sec: 52.328\n","INFO:tensorflow:loss = 19.894722, step = 1801 (1.911 sec)\n","INFO:tensorflow:global_step/sec: 51.4353\n","INFO:tensorflow:loss = 17.00323, step = 1901 (1.948 sec)\n","INFO:tensorflow:global_step/sec: 51.2094\n","INFO:tensorflow:loss = 17.18053, step = 2001 (1.949 sec)\n","INFO:tensorflow:global_step/sec: 51.4239\n","INFO:tensorflow:loss = 24.884876, step = 2101 (1.944 sec)\n","INFO:tensorflow:global_step/sec: 52.0951\n","INFO:tensorflow:loss = 18.182367, step = 2201 (1.922 sec)\n","INFO:tensorflow:global_step/sec: 52.1134\n","INFO:tensorflow:loss = 20.102203, step = 2301 (1.917 sec)\n","INFO:tensorflow:global_step/sec: 52.2454\n","INFO:tensorflow:loss = 19.113407, step = 2401 (1.918 sec)\n","INFO:tensorflow:global_step/sec: 51.9811\n","INFO:tensorflow:loss = 18.468758, step = 2501 (1.920 sec)\n","INFO:tensorflow:global_step/sec: 52.5168\n","INFO:tensorflow:loss = 13.9954605, step = 2601 (1.904 sec)\n","INFO:tensorflow:global_step/sec: 51.771\n","INFO:tensorflow:loss = 13.585646, step = 2701 (1.932 sec)\n","INFO:tensorflow:global_step/sec: 52.1139\n","INFO:tensorflow:loss = 15.877504, step = 2801 (1.919 sec)\n","INFO:tensorflow:global_step/sec: 52.0056\n","INFO:tensorflow:loss = 17.64384, step = 2901 (1.924 sec)\n","INFO:tensorflow:global_step/sec: 52.0973\n","INFO:tensorflow:loss = 19.989462, step = 3001 (1.919 sec)\n","INFO:tensorflow:global_step/sec: 52.9737\n","INFO:tensorflow:loss = 21.701738, step = 3101 (1.887 sec)\n","INFO:tensorflow:global_step/sec: 52.6148\n","INFO:tensorflow:loss = 17.823292, step = 3201 (1.901 sec)\n","INFO:tensorflow:global_step/sec: 52.4242\n","INFO:tensorflow:loss = 12.276075, step = 3301 (1.907 sec)\n","INFO:tensorflow:global_step/sec: 52.2945\n","INFO:tensorflow:loss = 15.963663, step = 3401 (1.913 sec)\n","INFO:tensorflow:global_step/sec: 52.7078\n","INFO:tensorflow:loss = 13.877317, step = 3501 (1.897 sec)\n","INFO:tensorflow:global_step/sec: 52.4574\n","INFO:tensorflow:loss = 24.820389, step = 3601 (1.906 sec)\n","INFO:tensorflow:global_step/sec: 52.9938\n","INFO:tensorflow:loss = 20.33455, step = 3701 (1.887 sec)\n","INFO:tensorflow:global_step/sec: 53.227\n","INFO:tensorflow:loss = 9.755184, step = 3801 (1.880 sec)\n","INFO:tensorflow:global_step/sec: 53.2618\n","INFO:tensorflow:loss = 15.407083, step = 3901 (1.876 sec)\n","INFO:tensorflow:global_step/sec: 52.9964\n","INFO:tensorflow:loss = 11.153748, step = 4001 (1.888 sec)\n","INFO:tensorflow:global_step/sec: 52.7416\n","INFO:tensorflow:loss = 10.3505, step = 4101 (1.899 sec)\n","INFO:tensorflow:global_step/sec: 52.6389\n","INFO:tensorflow:loss = 17.914541, step = 4201 (1.899 sec)\n","INFO:tensorflow:global_step/sec: 52.867\n","INFO:tensorflow:loss = 12.873158, step = 4301 (1.893 sec)\n","INFO:tensorflow:global_step/sec: 52.8898\n","INFO:tensorflow:loss = 29.446457, step = 4401 (1.887 sec)\n","INFO:tensorflow:global_step/sec: 52.8232\n","INFO:tensorflow:loss = 17.11626, step = 4501 (1.893 sec)\n","INFO:tensorflow:global_step/sec: 53.1137\n","INFO:tensorflow:loss = 15.691729, step = 4601 (1.883 sec)\n","INFO:tensorflow:global_step/sec: 52.7491\n","INFO:tensorflow:loss = 8.120539, step = 4701 (1.897 sec)\n","INFO:tensorflow:global_step/sec: 52.4885\n","INFO:tensorflow:loss = 14.468503, step = 4801 (1.904 sec)\n","INFO:tensorflow:global_step/sec: 52.5568\n","INFO:tensorflow:loss = 12.903908, step = 4901 (1.903 sec)\n","INFO:tensorflow:global_step/sec: 52.1711\n","INFO:tensorflow:loss = 8.28323, step = 5001 (1.916 sec)\n","INFO:tensorflow:global_step/sec: 50.9788\n","INFO:tensorflow:loss = 26.80542, step = 5101 (1.962 sec)\n","INFO:tensorflow:global_step/sec: 51.0808\n","INFO:tensorflow:loss = 10.367331, step = 5201 (1.957 sec)\n","INFO:tensorflow:global_step/sec: 52.2336\n","INFO:tensorflow:loss = 25.18997, step = 5301 (1.915 sec)\n","INFO:tensorflow:global_step/sec: 53.3737\n","INFO:tensorflow:loss = 12.170677, step = 5401 (1.874 sec)\n","INFO:tensorflow:global_step/sec: 52.213\n","INFO:tensorflow:loss = 15.338127, step = 5501 (1.916 sec)\n","INFO:tensorflow:global_step/sec: 52.8132\n","INFO:tensorflow:loss = 13.601304, step = 5601 (1.893 sec)\n","INFO:tensorflow:global_step/sec: 52.8871\n","INFO:tensorflow:loss = 16.335394, step = 5701 (1.891 sec)\n","INFO:tensorflow:global_step/sec: 52.6756\n","INFO:tensorflow:loss = 17.73589, step = 5801 (1.898 sec)\n","INFO:tensorflow:global_step/sec: 52.5398\n","INFO:tensorflow:loss = 10.953089, step = 5901 (1.904 sec)\n","INFO:tensorflow:global_step/sec: 52.4714\n","INFO:tensorflow:loss = 15.843468, step = 6001 (1.905 sec)\n","INFO:tensorflow:global_step/sec: 52.857\n","INFO:tensorflow:loss = 9.304722, step = 6101 (1.892 sec)\n","INFO:tensorflow:global_step/sec: 52.4176\n","INFO:tensorflow:loss = 12.025944, step = 6201 (1.908 sec)\n","INFO:tensorflow:global_step/sec: 52.843\n","INFO:tensorflow:loss = 16.054922, step = 6301 (1.893 sec)\n","INFO:tensorflow:global_step/sec: 52.7259\n","INFO:tensorflow:loss = 5.4089603, step = 6401 (1.899 sec)\n","INFO:tensorflow:global_step/sec: 51.0946\n","INFO:tensorflow:loss = 9.949667, step = 6501 (1.958 sec)\n","INFO:tensorflow:global_step/sec: 50.6849\n","INFO:tensorflow:loss = 8.772235, step = 6601 (1.973 sec)\n","INFO:tensorflow:global_step/sec: 51.1046\n","INFO:tensorflow:loss = 16.859684, step = 6701 (1.952 sec)\n","INFO:tensorflow:global_step/sec: 50.5137\n","INFO:tensorflow:loss = 10.490712, step = 6801 (1.980 sec)\n","INFO:tensorflow:global_step/sec: 51.2611\n","INFO:tensorflow:loss = 10.425235, step = 6901 (1.954 sec)\n","INFO:tensorflow:global_step/sec: 51.1596\n","INFO:tensorflow:loss = 9.171141, step = 7001 (1.954 sec)\n","INFO:tensorflow:global_step/sec: 52.4752\n","INFO:tensorflow:loss = 4.9812746, step = 7101 (1.904 sec)\n","INFO:tensorflow:global_step/sec: 52.223\n","INFO:tensorflow:loss = 5.872529, step = 7201 (1.918 sec)\n","INFO:tensorflow:global_step/sec: 52.2635\n","INFO:tensorflow:loss = 17.34754, step = 7301 (1.910 sec)\n","INFO:tensorflow:global_step/sec: 52.0905\n","INFO:tensorflow:loss = 17.246662, step = 7401 (1.920 sec)\n","INFO:tensorflow:global_step/sec: 51.7723\n","INFO:tensorflow:loss = 16.34798, step = 7501 (1.933 sec)\n","INFO:tensorflow:global_step/sec: 52.2649\n","INFO:tensorflow:loss = 17.317522, step = 7601 (1.912 sec)\n","INFO:tensorflow:global_step/sec: 52.521\n","INFO:tensorflow:loss = 10.6315975, step = 7701 (1.905 sec)\n","INFO:tensorflow:global_step/sec: 52.3696\n","INFO:tensorflow:loss = 5.543938, step = 7801 (1.909 sec)\n","INFO:tensorflow:global_step/sec: 52.4423\n","INFO:tensorflow:loss = 11.444475, step = 7901 (1.907 sec)\n","INFO:tensorflow:global_step/sec: 52.6508\n","INFO:tensorflow:loss = 7.0217566, step = 8001 (1.899 sec)\n","INFO:tensorflow:global_step/sec: 52.748\n","INFO:tensorflow:loss = 13.114562, step = 8101 (1.896 sec)\n","INFO:tensorflow:global_step/sec: 51.7179\n","INFO:tensorflow:loss = 7.7286763, step = 8201 (1.934 sec)\n","INFO:tensorflow:global_step/sec: 52.5585\n","INFO:tensorflow:loss = 4.3106155, step = 8301 (1.903 sec)\n","INFO:tensorflow:global_step/sec: 52.7724\n","INFO:tensorflow:loss = 8.934465, step = 8401 (1.894 sec)\n","INFO:tensorflow:global_step/sec: 52.3949\n","INFO:tensorflow:loss = 10.375504, step = 8501 (1.908 sec)\n","INFO:tensorflow:global_step/sec: 52.7043\n","INFO:tensorflow:loss = 15.897134, step = 8601 (1.900 sec)\n","INFO:tensorflow:global_step/sec: 52.1318\n","INFO:tensorflow:loss = 3.5567589, step = 8701 (1.915 sec)\n","INFO:tensorflow:global_step/sec: 52.1725\n","INFO:tensorflow:loss = 11.334833, step = 8801 (1.919 sec)\n","INFO:tensorflow:global_step/sec: 52.4204\n","INFO:tensorflow:loss = 6.3306546, step = 8901 (1.909 sec)\n","INFO:tensorflow:global_step/sec: 52.6346\n","INFO:tensorflow:loss = 3.4834552, step = 9001 (1.896 sec)\n","INFO:tensorflow:global_step/sec: 53.5557\n","INFO:tensorflow:loss = 1.9142388, step = 9101 (1.872 sec)\n","INFO:tensorflow:global_step/sec: 52.6261\n","INFO:tensorflow:loss = 11.669888, step = 9201 (1.896 sec)\n","INFO:tensorflow:global_step/sec: 52.3728\n","INFO:tensorflow:loss = 9.170072, step = 9301 (1.910 sec)\n","INFO:tensorflow:global_step/sec: 52.71\n","INFO:tensorflow:loss = 8.279694, step = 9401 (1.896 sec)\n","INFO:tensorflow:global_step/sec: 53.287\n","INFO:tensorflow:loss = 6.365715, step = 9501 (1.877 sec)\n","INFO:tensorflow:global_step/sec: 52.6629\n","INFO:tensorflow:loss = 8.297907, step = 9601 (1.899 sec)\n","INFO:tensorflow:global_step/sec: 52.5033\n","INFO:tensorflow:loss = 9.173943, step = 9701 (1.905 sec)\n","INFO:tensorflow:global_step/sec: 53.2699\n","INFO:tensorflow:loss = 8.067462, step = 9801 (1.877 sec)\n","INFO:tensorflow:global_step/sec: 53.0437\n","INFO:tensorflow:loss = 7.1905236, step = 9901 (1.885 sec)\n","INFO:tensorflow:Saving checkpoints for 10000 into /tmp/tmpaf604pnh/model.ckpt.\n","INFO:tensorflow:Loss for final step: 4.707959.\n"],"name":"stdout"}]},{"metadata":{"id":"FsDszKyxDhsw","colab_type":"code","outputId":"86b5a196-6be9-405f-d7f9-10c9db6b8928","executionInfo":{"status":"ok","timestamp":1542869945599,"user_tz":-480,"elapsed":285340,"user":{"displayName":"Albert Padin","photoUrl":"https://lh5.googleusercontent.com/-tmpLMtYWiVE/AAAAAAAAAAI/AAAAAAAAMJw/5D7JvbPNprg/s64/photo.jpg","userId":"03575150646004157640"}},"colab":{"base_uri":"https://localhost:8080/","height":547}},"cell_type":"code","source":["# prediction\n","train_eval_result = estimator.evaluate(input_fn=predict_train_input_fn)\n","test_eval_result = estimator.evaluate(input_fn=predict_test_input_fn)\n","\n","print(\"Training set accuracy: {accuracy}\".format(**train_eval_result))\n","print(\"Test set accuracy: {accuracy}\".format(**test_eval_result))\n","\n"],"execution_count":0,"outputs":[{"output_type":"stream","text":["INFO:tensorflow:Calling model_fn.\n","INFO:tensorflow:Saver not created because there are no variables in the graph to restore\n","INFO:tensorflow:Saver not created because there are no variables in the graph to restore\n","WARNING:tensorflow:Trapezoidal rule is known to produce incorrect PR-AUCs; please switch to \"careful_interpolation\" instead.\n","WARNING:tensorflow:Trapezoidal rule is known to produce incorrect PR-AUCs; please switch to \"careful_interpolation\" instead.\n","INFO:tensorflow:Done calling model_fn.\n","INFO:tensorflow:Starting evaluation at 2018-11-22-06:58:47\n","INFO:tensorflow:Graph was finalized.\n","INFO:tensorflow:Restoring parameters from /tmp/tmpaf604pnh/model.ckpt-10000\n","INFO:tensorflow:Running local_init_op.\n","INFO:tensorflow:Done running local_init_op.\n","INFO:tensorflow:Finished evaluation at 2018-11-22-06:58:59\n","INFO:tensorflow:Saving dict for global step 10000: accuracy = 0.97988343, accuracy_baseline = 0.90457165, auc = 0.99282914, auc_precision_recall = 0.9591088, average_loss = 0.055098496, global_step = 10000, label/mean = 0.09542834, loss = 7.0477495, precision = 0.9351014, prediction/mean = 0.09468877, recall = 0.8480545\n","INFO:tensorflow:Saving 'checkpoint_path' summary for global step 10000: /tmp/tmpaf604pnh/model.ckpt-10000\n","INFO:tensorflow:Calling model_fn.\n","INFO:tensorflow:Saver not created because there are no variables in the graph to restore\n","INFO:tensorflow:Saver not created because there are no variables in the graph to restore\n","WARNING:tensorflow:Trapezoidal rule is known to produce incorrect PR-AUCs; please switch to \"careful_interpolation\" instead.\n","WARNING:tensorflow:Trapezoidal rule is known to produce incorrect PR-AUCs; please switch to \"careful_interpolation\" instead.\n","INFO:tensorflow:Done calling model_fn.\n","INFO:tensorflow:Starting evaluation at 2018-11-22-06:59:00\n","INFO:tensorflow:Graph was finalized.\n","INFO:tensorflow:Restoring parameters from /tmp/tmpaf604pnh/model.ckpt-10000\n","INFO:tensorflow:Running local_init_op.\n","INFO:tensorflow:Done running local_init_op.\n","INFO:tensorflow:Finished evaluation at 2018-11-22-06:59:05\n","INFO:tensorflow:Saving dict for global step 10000: accuracy = 0.94406843, accuracy_baseline = 0.90248793, auc = 0.9360157, auc_precision_recall = 0.766051, average_loss = 0.18118124, global_step = 10000, label/mean = 0.09751207, loss = 23.128872, precision = 0.75314766, prediction/mean = 0.09289073, recall = 0.63431877\n","INFO:tensorflow:Saving 'checkpoint_path' summary for global step 10000: /tmp/tmpaf604pnh/model.ckpt-10000\n","Training set accuracy: 0.9798834323883057\n","Test set accuracy: 0.944068431854248\n"],"name":"stdout"}]},{"metadata":{"id":"Ud7W24g4d5di","colab_type":"code","colab":{}},"cell_type":"code","source":[""],"execution_count":0,"outputs":[]}]}